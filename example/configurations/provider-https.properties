# HTTPS config
# edc.web.https.keystore.password=password
# edc.web.https.keymanager.password=password
# edc.web.https.keystore.type=PKCS12
edc.web.https.keystore.path=./example/resources/keystore.pkcs
edc.jsonld.https.enabled=true
# AAS Extension specific
# Supply AAS model + (port XOR AAS service config) for an AAS service internally started by the extension
edc.aas.localAASModelPath=./example/resources/IDTA 02016-1-0 _Template_ControlComponentInstance.aasx
edc.aas.localAASServicePort=8080
edc.dataplane.aas.acceptOwnSelfSignedCertificates=True
# edc.aas.localAASServiceConfigPath = ./example/resources/exampleConfig.json
# Provide a URL of an already running AAS service (such as FAÂ³ST, BaSyx)
# edc.aas.remoteAasLocation = http://example.com/aas
# Period of synchronizing the EDC assetStore with the connected AAS services (in seconds)
edc.aas.syncPeriod=100
# Path to a default access policy definition file
# edc.aas.defaultAccessPolicyDefinitionPath = ...
# Path to a default contract policy definition file
# edc.aas.defaultContractPolicyDefinitionPath = ...
# EDC specific, mostly default values
# Port and path for custom http services such as SelfDescription
web.http.port=8281
web.http.path=/api
# This is for EDC to send status messages regarding data transfer
web.http.control.port=8181
web.http.control.path=/control
# Port and path for requesting an EDC to communicate with another EDC by IDS messages (consumer-provider)
web.http.management.port=8182
web.http.management.path=/management
# Port and path for IDS messages (from another EDC)
web.http.protocol.port=8282
web.http.protocol.path=/dsp
edc.dsp.callback.address=https://localhost:8282/dsp
# Connector hostname, which e.g. is used in referer urls
edc.hostname=localhost
# Auth key for using internal EDC api (header key: x-api-key)
edc.api.auth.key=password
# Required for consumer-pull actions
edc.transfer.proxy.token.verifier.publickey.alias=public-key
edc.transfer.proxy.token.signer.privatekey.alias=private-key