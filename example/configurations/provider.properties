# AAS Extension specific
# Supply AAS model + (port XOR AAS service config) for an AAS service internally started by the extension
edc.aas.localAASModelPath=./example/resources/aas_model_v3.aasx
edc.aas.localAASServicePort=8080
edc.aas.onlySubmodels=False
edc.aas.allowSelfSignedCertificates=True
edc.dataplane.aas.acceptForeignSelfSignedCertificates=False
edc.dataplane.aas.acceptOwnSelfSignedCertificates=True
# edc.aas.localAASServiceConfigPath = ./example/resources/exampleConfig.json
# Provide a URL of an already running AAS service (such as FAÂ³ST, BaSyx)
# edc.aas.remoteAasLocation = http://example.com/aas
# Period of synchronizing the EDC assetStore with the connected AAS services (in seconds)
edc.aas.syncPeriod=90
# Expose self-description
# Path to a default access policy definition file
# edc.aas.defaultAccessPolicyDefinitionPath = ...
# Path to a default contract policy definition file
# edc.aas.defaultContractPolicyDefinitionPath = ...
# EDC specific, mostly default values
# VERSION api
web.http.version.port=8183
web.http.version.path=/version
# For custom http services such as SelfDescription
web.http.port=8281
web.http.path=/api
# For sending status messages regarding data transfer
web.http.control.port=8181
web.http.control.path=/control
# For requesting an EDC to communicate with another EDC by DSP messages (consumer-provider)
web.http.management.port=8182
web.http.management.path=/management
# For IDS messages (from other EDC)
web.http.protocol.port=8282
web.http.protocol.path=/dsp
edc.dsp.callback.address=http://localhost:8282/dsp
edc.transfer.functions.enabled.protocols=http
# Connector hostname, which e.g. is used in referer urls
edc.hostname=localhost
# Auth key for using internal EDC api (header key: x-api-key)
web.http.management.auth.key=password
# GUI configuration (enable DataDashboard to communicate with EDC)
edc.web.rest.cors.enabled=true
edc.web.rest.cors.origins=*
edc.web.rest.cors.headers=x-api-key, content-type
edc.web.rest.cors.methods=GET, POST, DELETE, PUT, OPTIONS
edc.dsp.id=provider
edc.participant.id=provider
# Required for consumer-pull actions
edc.transfer.proxy.token.verifier.publickey.alias=public-key
edc.transfer.proxy.token.signer.privatekey.alias=private-key

# Without this, EDC won't boot
edc.dpf.selector.url=https://fake/url