# AAS EXTENSION CONFIG
edc.aas.localAASModelPath=../../samples/resources/aas_model_v3.aasx
edc.aas.localAASServicePort=8080
edc.aas.onlySubmodels=True
edc.aas.allowSelfSignedCertificates=True
edc.aas.useAasDataPlane=True
# edc.aas.localAASServiceConfigPath = ./samples/resources/exampleConfig.json
# Provide a URL of an already running AAS service (such as FA3ST, BaSyx)
# edc.aas.remoteAasLocation = http://localhost:12345/api/v3.0
# Period of synchronizing the EDC assetStore with the connected AAS services (in seconds)
edc.aas.syncPeriod=5
# Expose self-description
# Path to a default access policy definition file
# edc.aas.defaultAccessPolicyDefinitionPath = ...
# Path to a default contract policy definition file
# edc.aas.defaultContractPolicyDefinitionPath = ...
# AAS DATA PLANE CONFIG
edc.dataplane.aas.acceptForeignSelfSignedCertificates=False
edc.dataplane.aas.acceptOwnSelfSignedCertificates=True
# EDC CONFIG
edc.vault.hashicorp.url=http://127.0.0.1:8200
edc.vault.hashicorp.token=<secret>
edc.vault.hashicorp.api.secret.path=/v1/secret
edc.vault.hashicorp.health.check.enabled=true
web.http.port=8281
web.http.path=/api
web.http.management.port=8182
web.http.management.path=/management
web.http.management.auth.type=tokenbased
web.http.management.auth.key.alias=consumer
# If no vault is available, this is used as password:
web.http.management.auth.key=password
web.http.control.port=8181
web.http.control.path=/control
web.http.protocol.port=8282
web.http.protocol.path=/dsp
edc.dsp.callback.address=http://localhost:8282/dsp
edc.transfer.functions.enabled.protocols=http
edc.web.rest.cors.enabled=true
edc.web.rest.cors.origins=*
edc.web.rest.cors.headers=*
edc.web.rest.cors.methods=GET, POST, DELETE, PUT, OPTIONS
edc.hostname=localhost
edc.participant.id=provider
# Required for consumer-pull actions. If you intend on using PULL-actions, set these values correctly.
edc.transfer.proxy.token.verifier.publickey.alias=public-key
edc.transfer.proxy.token.signer.privatekey.alias=private-key
